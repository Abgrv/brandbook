# app/users/dependencies.py

from fastapi import Depends, HTTPException, status
from fastapi.security import OAuth2PasswordBearer
from jose import jwt, JWTError
from sqlalchemy.orm import Session

from database import get_db
from backend.users import models

# üìå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è JWT
SECRET_KEY = "supersecret"  # ‚ö† —Ö—Ä–∞–Ω–∏—Ç—å –≤ .env
ALGORITHM = "HS256"

# üìå –£–∫–∞–∑—ã–≤–∞–µ–º FastAPI, —á—Ç–æ —Ç–æ–∫–µ–Ω –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ Bearer
oauth2_scheme = OAuth2PasswordBearer(tokenUrl="/users/login")


# üÜï NEW CODE ‚Äî –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ç–æ–∫–µ–Ω–∞
def get_current_user(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db)):
    """
    –î–µ–∫–æ–¥–∏—Ä—É–µ—Ç JWT-—Ç–æ–∫–µ–Ω, –∏–∑–≤–ª–µ–∫–∞–µ—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è,
    –Ω–∞—Ö–æ–¥–∏—Ç –µ–≥–æ –≤ –±–∞–∑–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –æ—à–∏–±–∫–∞ 401.
    """
    credentials_exception = HTTPException(
        status_code=status.HTTP_401_UNAUTHORIZED,
        detail="–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        headers={"WWW-Authenticate": "Bearer"},
    )

    try:
        # –î–µ–∫–æ–¥–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω
        payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
        user_id: str = payload.get("sub")
        if user_id is None:
            raise credentials_exception
    except JWTError:
        raise credentials_exception

    # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    user = db.query(models.User).filter(models.User.id == int(user_id)).first()
    if user is None:
        raise credentials_exception

    return user
