# app/users/schemas.py

from pydantic import BaseModel, EmailStr
from typing import Annotated
from pydantic import StringConstraints
import uuid


# üìå –°—Ö–µ–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏)
class UserCreate(BaseModel):
    # –ò–º—è ‚Äî –º–∞–∫—Å–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤
    first_name: Annotated[str, StringConstraints(max_length=50)]
    # –§–∞–º–∏–ª–∏—è ‚Äî –º–∞–∫—Å–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤
    last_name: Annotated[str, StringConstraints(max_length=50)]
    # Email –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    email: EmailStr
    # –ü–∞—Ä–æ–ª—å ‚Äî –º–∏–Ω–∏–º—É–º 8, –º–∞–∫—Å–∏–º—É–º 128 —Å–∏–º–≤–æ–ª–æ–≤
    password: Annotated[str, StringConstraints(min_length=8, max_length=128)]


# üìå –°—Ö–µ–º–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ (–±–µ–∑ –ø–∞—Ä–æ–ª—è)
class UserResponse(BaseModel):
    id: uuid.UUID
    first_name: str
    last_name: str
    email: EmailStr

    class Config:
        from_attributes = True  # –ü–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–ø—Ä—è–º—É—é —Å SQLAlchemy –æ–±—ä–µ–∫—Ç–∞–º–∏


# üìå –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserLogin(BaseModel):
    email: EmailStr
    password: str


# üìå –û—Ç–≤–µ—Ç –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
class Token(BaseModel):
    access_token: str
    token_type: str = "bearer"
